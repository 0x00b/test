/**
 * test.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import RpcStatus from '../model/RpcStatus';
import TestEchoResp from '../model/TestEchoResp';
import TestRequestBody from '../model/TestRequestBody';

/**
* Test service.
* @module api/TestApi
* @version version not set
*/
export default class TestApi {

    /**
    * Constructs a new TestApi. 
    * @alias module:api/TestApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the testEcho operation.
     * @callback module:api/TestApi~testEchoCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TestEchoResp} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * curl 'localhost:8080/v1/example/echo/userid123?appId=1' -XPOST  -H \"Content-Type: application/json\" -d '{\"value\":\"v1\"}'
     * @param {String} userId mapped to the URL, appId
     * @param {module:model/TestRequestBody} body mapped to the body
     * @param {Object} opts Optional parameters
     * @param {String} opts.appId not bind, mapped to the query, userId.
     * @param {module:api/TestApi~testEchoCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TestEchoResp}
     */
    testEcho(userId, body, opts, callback) {
      opts = opts || {};
      let postBody = body;
      // verify the required parameter 'userId' is set
      if (userId === undefined || userId === null) {
        throw new Error("Missing the required parameter 'userId' when calling testEcho");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling testEcho");
      }

      let pathParams = {
        'userId': userId
      };
      let queryParams = {
        'appId': opts['appId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = TestEchoResp;
      return this.apiClient.callApi(
        '/v1/example/echo/{userId}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
